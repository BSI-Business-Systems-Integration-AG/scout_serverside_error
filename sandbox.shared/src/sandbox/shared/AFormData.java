/**
 * 
 */
package sandbox.shared;

import java.util.Date;
import java.util.Map;

import javax.annotation.Generated;

import org.eclipse.scout.rt.shared.data.form.AbstractFormData;
import org.eclipse.scout.rt.shared.data.form.ValidationRule;
import org.eclipse.scout.rt.shared.data.form.properties.AbstractPropertyData;

import sandbox.shared.services.field.AbstractValueFieldDataWithStatus;
import sandbox.shared.services.template.formfield.AbstractChildGroupBoxData;

/**
 * <b>NOTE:</b><br>
 * This class is auto generated by the Scout SDK. No manual modifications recommended.
 * 
 * @generated
 */
@Generated(value = "org.eclipse.scout.sdk.workspace.dto.formdata.FormDataDtoUpdateOperation", comments = "This class is auto generated by the Scout SDK. No manual modifications recommended.")
public class AFormData extends AbstractFormData {

  private static final long serialVersionUID = 1L;

  public AFormData() {
  }

  public Child1Box getChild1Box() {
    return getFieldByClass(Child1Box.class);
  }

  public Child2Box getChild2Box() {
    return getFieldByClass(Child2Box.class);
  }

  public Child3Box getChild3Box() {
    return getFieldByClass(Child3Box.class);
  }

  public FirstName getFirstName() {
    return getFieldByClass(FirstName.class);
  }

  public LastName getLastName() {
    return getFieldByClass(LastName.class);
  }

  public PersonId getPersonId() {
    return getFieldByClass(PersonId.class);
  }

  public StartDate getStartDate() {
    return getFieldByClass(StartDate.class);
  }

  /**
   * access method for property TestNr.
   */
  public Long getTestNr() {
    return getTestNrProperty().getValue();
  }

  /**
   * access method for property TestNr.
   */
  public void setTestNr(Long testNr) {
    getTestNrProperty().setValue(testNr);
  }

  public TestNrProperty getTestNrProperty() {
    return getPropertyByClass(TestNrProperty.class);
  }

  public static class Child1Box extends AbstractChildGroupBoxData {

    private static final long serialVersionUID = 1L;

    public Child1Box() {
    }
  }

  public static class Child2Box extends AbstractChildGroupBoxData {

    private static final long serialVersionUID = 1L;

    public Child2Box() {
    }
  }

  public static class Child3Box extends AbstractChildGroupBoxData {

    private static final long serialVersionUID = 1L;

    public Child3Box() {
    }
  }

  public static class FirstName extends AbstractValueFieldDataWithStatus<String> {

    private static final long serialVersionUID = 1L;

    public FirstName() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class LastName extends AbstractValueFieldDataWithStatus<String> {

    private static final long serialVersionUID = 1L;

    public LastName() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_LENGTH, 4000);
    }
  }

  public static class PersonId extends AbstractValueFieldDataWithStatus<Long> {

    private static final long serialVersionUID = 1L;

    public PersonId() {
    }

    /**
     * list of derived validation rules.
     */
    @Override
    protected void initValidationRules(Map<String, Object> ruleMap) {
      super.initValidationRules(ruleMap);
      ruleMap.put(ValidationRule.MAX_VALUE, Long.MAX_VALUE);
      ruleMap.put(ValidationRule.MIN_VALUE, Long.MIN_VALUE);
    }
  }

  public static class StartDate extends AbstractValueFieldDataWithStatus<Date> {

    private static final long serialVersionUID = 1L;

    public StartDate() {
    }
  }

  public static class TestNrProperty extends AbstractPropertyData<Long> {

    private static final long serialVersionUID = 1L;

    public TestNrProperty() {
    }
  }
}
